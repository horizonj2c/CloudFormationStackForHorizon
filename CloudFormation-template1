AWSTemplateFormatVersion: 2010-09-09
# This CloudFormation template deploys a basic VPC / Network. It has been created for some experimentation
Resources:
# VPC for our stack
  MyVPC1:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.31.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value:  !Join ['', [!Ref "AWS::StackName", "-VPC" ]]
# Private Subnet form the VPC           
  MyPrivateSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref MyVPC1
      AvailabilityZone: !Select [ 0, !GetAZs ]    # Get the first AZ in the list
      CidrBlock: 172.31.255.0/24
      Tags:
        - 
          Key: Name
          Value: !Join ['', [!Ref "AWS::StackName", "-PrivateSubnet" ]]
 # Public Subnet form the VPC           
  MyPublicSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref MyVPC1
      AvailabilityZone: !Select [ 0, !GetAZs ]    # Get the first AZ in the list
      CidrBlock: 172.31.1.0/24
      Tags:
        - 
          Key: Name
          Value: !Join ['', [!Ref "AWS::StackName", "-PublicSubnet" ]]         
 # Internet access for the VPC     
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    DependsOn: MyVPC1
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC1
      InternetGatewayId: !Ref InternetGateway
  # NAT Gateway:
 NATGateway:
   Type: AWS::EC2::NatGateway
   Properties:
     AllocationId: !GetAtt ElasticIPAddress.AllocationId
     SubnetId: !Ref MyPublicSubnet1
     Tags:
     - Key: Name
       Value: ['NAT-', [!Ref "AWS::StackName"]
 ElasticIPAddress:
   Type: AWS::EC2::EIP
   Properties:
     Domain: VPC
  # Some route tables for our subnets:
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC1
      Tags:
      - Key: Name
        Value: Public
  # Public route table has direct routing to IGW:      
  PublicRoute1:   
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway  
  # Private route table:
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC1
      Tags:
      - Key: Name
        Value: Private
  PrivateRoute1:            # Private route table can access web via NAT (created below)
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      # Route traffic through the NAT Gateway:
      NatGatewayId: !Ref NATGateway
  
  # Creation of an EC2 instance
  MyEC2Instance1:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: "ami-030dbca661d402413"
      InstanceType: "t2.micro"
      Tags:
        -
          Key: "Name"
          Value: !Join ['', [!Ref "AWS::StackName", "instance1" ]]
